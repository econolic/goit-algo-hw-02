import queue
import time
import random

# –ì–ª–æ–±–∞–ª—å–Ω—ñ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
request_id_counter = 0         # –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏—Ö –∑–∞—è–≤–æ–∫
processed_requests_count = 0   # –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö –∑–∞—è–≤–æ–∫
total_processing_time = 0.0    # –°—É–º–∞—Ä–Ω–∏–π —á–∞—Å, –≤–∏—Ç—Ä–∞—á–µ–Ω–∏–π –Ω–∞ –æ–±—Ä–æ–±–∫—É –≤—Å—ñ—Ö –∑–∞—è–≤–æ–∫

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —á–µ—Ä–≥–∏ –∑–∞—è–≤–æ–∫
application_queue = queue.Queue()

def generate_request():
    """
    –ì–µ–Ω–µ—Ä—É—î –Ω–æ–≤—É –∑–∞—è–≤–∫—É –∑ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–º ID —Ç–∞ –¥–æ–¥–∞—î —ó—ó –¥–æ —á–µ—Ä–≥–∏.
    """
    global request_id_counter
    request_id_counter += 1
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó –∑–∞—è–≤–∫–∏
    new_request = {"id": request_id_counter, "data": f"–ó–∞—è–≤–∫–∞ –Ω–æ–º–µ—Ä {request_id_counter}"}
    # –î–æ–¥–∞–Ω–Ω—è –∑–∞—è–≤–∫–∏ –¥–æ —á–µ—Ä–≥–∏
    application_queue.put(new_request)
    print(f"‚úÖ –ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∞: ID {new_request['id']}")

def process_request():
    """
    –û–±—Ä–æ–±–ª—è—î –∑–∞—è–≤–∫—É, –≤–∏–¥–∞–ª—è—é—á–∏ —ó—ó –∑ —á–µ—Ä–≥–∏.
    –Ø–∫—â–æ —á–µ—Ä–≥–∞ –ø—É—Å—Ç–∞, –≤–∏–≤–æ–¥–∏—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.
    """
    global processed_requests_count
    global total_processing_time

    if not application_queue.empty():
        # –í–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞—è–≤–∫—É –∑ —á–µ—Ä–≥–∏
        current_request = application_queue.get()
        print(f"‚öôÔ∏è –û–±—Ä–æ–±–∫–∞ –∑–∞—è–≤–∫–∏: ID {current_request['id']} - {current_request['data']}")

        # –Ü–º—ñ—Ç–∞—Ü—ñ—è —á–∞—Å—É –Ω–∞ –æ–±—Ä–æ–±–∫—É (–≤—ñ–¥ 0.5 –¥–æ 2.5 —Å–µ–∫—É–Ω–¥)
        processing_delay = random.uniform(0.5, 2.5)
        time.sleep(processing_delay)

        # –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        processed_requests_count += 1
        total_processing_time += processing_delay

        print(f"üü¢ –ó–∞—è–≤–∫–∞ ID {current_request['id']} –æ–±—Ä–æ–±–ª–µ–Ω–∞ –∑–∞ {processing_delay:.2f} —Å–µ–∫.")
        application_queue.task_done() # –ü–æ–∑–Ω–∞—á–∏—Ç–∏ –∑–∞–¥–∞—á—É —è–∫ –≤–∏–∫–æ–Ω–∞–Ω—É
    else:
        # –í–∏–≤–µ–¥–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —â–æ —á–µ—Ä–≥–∞ –ø—É—Å—Ç–∞
        print("‚ÑπÔ∏è –ß–µ—Ä–≥–∞ –ø—É—Å—Ç–∞. –ù–µ–º–∞—î –∑–∞—è–≤–æ–∫ –¥–ª—è –æ–±—Ä–æ–±–∫–∏.")

# –ì–æ–ª–æ–≤–Ω–∏–π —Ü–∏–∫–ª –ø—Ä–æ–≥—Ä–∞–º–∏
if __name__ == "__main__":
    print("–°–µ—Ä–≤—ñ—Å–Ω–∏–π —Ü–µ–Ω—Ç—Ä —Ä–æ–∑–ø–æ—á–∞–≤ —Ä–æ–±–æ—Ç—É...")
    start_time = time.time() # –î–ª—è –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ —á–∞—Å—É —Ä–æ–±–æ—Ç–∏

    try:
        while True:
            # –Ü–º—ñ—Ç—É—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤—É –≥–µ–Ω–µ—Ä–∞—Ü—ñ—é –∑–∞—è–≤–æ–∫
            # –ó–º–µ–Ω—à–∏–º–æ —á–∞—Å—Ç–æ—Ç—É –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó, —â–æ–± –æ–±—Ä–æ–±–∫–∞ –≤—Å—Ç–∏–≥–∞–ª–∞
            if random.random() < 0.4: # ~40% —à–∞–Ω—Å –∑–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –∑–∞—è–≤–∫—É
                generate_request()

            # –Ü–º—ñ—Ç—É—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤—É –æ–±—Ä–æ–±–∫—É –∑–∞—è–≤–æ–∫, —è–∫—â–æ –≤–æ–Ω–∏ —î
            if not application_queue.empty():
                # –ó–±—ñ–ª—å—à–∏–º–æ —à–∞–Ω—Å –æ–±—Ä–æ–±–∫–∏, —è–∫—â–æ —î –∑–∞—è–≤–∫–∏
                if random.random() < 0.8 or application_queue.qsize() > 3:
                    process_request()
            else:
                pass

            # –ù–µ–≤–µ–ª–∏–∫–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è —ñ–º—ñ—Ç–∞—Ü—ñ—ó —Ä–µ–∞–ª—å–Ω–æ–≥–æ —á–∞—Å—É
            # –ó–º–µ–Ω—à–∏–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π sleep, —â–æ–± —á–∞—Å—Ç—ñ—à–µ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó/–æ–±—Ä–æ–±–∫–∏
            time.sleep(random.uniform(0.2, 0.8))

    except KeyboardInterrupt:
        print("\nüö™ –°–µ—Ä–≤—ñ—Å–Ω–∏–π —Ü–µ–Ω—Ç—Ä –∑–∞–≤–µ—Ä—à—É—î —Ä–æ–±–æ—Ç—É...")
        # –û–±—Ä–æ–±–∫–∞ –∑–∞–ª–∏—à–∫–æ–≤–∏—Ö –∑–∞—è–≤–æ–∫ –ø–µ—Ä–µ–¥ –≤–∏—Ö–æ–¥–æ–º
        print("–û–±—Ä–æ–±–∫–∞ –∑–∞–ª–∏—à–∫–æ–≤–∏—Ö –∑–∞—è–≤–æ–∫...")
        while not application_queue.empty():
            process_request()

        end_time = time.time() # –ß–∞—Å –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏
        total_runtime = end_time - start_time

        print("\n--- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–æ–±–æ—Ç–∏ —Å–µ—Ä–≤—ñ—Å–Ω–æ–≥–æ —Ü–µ–Ω—Ç—Ä—É ---")
        print(f"–ó–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å —Ä–æ–±–æ—Ç–∏: {total_runtime:.2f} —Å–µ–∫.")
        print(f"–í—Å—å–æ–≥–æ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ –∑–∞—è–≤–æ–∫: {request_id_counter}")
        print(f"–í—Å—å–æ–≥–æ –æ–±—Ä–æ–±–ª–µ–Ω–æ –∑–∞—è–≤–æ–∫: {processed_requests_count}")

        if processed_requests_count > 0:
            # –û–±—á–∏—Å–ª–µ–Ω–Ω—è —Å–µ—Ä–µ–¥–Ω—å–æ–≥–æ —á–∞—Å—É –æ–±—Ä–æ–±–∫–∏
            average_processing_time = total_processing_time / processed_requests_count
            print(f"–°–µ—Ä–µ–¥–Ω—ñ–π —á–∞—Å –æ–±—Ä–æ–±–∫–∏ –æ–¥–Ω—ñ—î—ó –∑–∞—è–≤–∫–∏: {average_processing_time:.2f} —Å–µ–∫.")
            # –û–±—á–∏—Å–ª–µ–Ω–Ω—è —Å–µ—Ä–µ–¥–Ω—å–æ—ó —à–≤–∏–¥–∫–æ—Å—Ç—ñ –æ–±—Ä–æ–±–∫–∏
            throughput_per_processing_time = processed_requests_count / total_processing_time if total_processing_time > 0 else 0
            print(f"–°–µ—Ä–µ–¥–Ω—è —à–≤–∏–¥–∫—ñ—Å—Ç—å –æ–±—Ä–æ–±–∫–∏: {throughput_per_processing_time:.2f} –∑–∞—è–≤–∫–∏/—Å–µ–∫.")
        else:
            print("–ñ–æ–¥–Ω–æ—ó –∑–∞—è–≤–∫–∏ –Ω–µ –±—É–ª–æ –æ–±—Ä–æ–±–ª–µ–Ω–æ.")

        print("–í—Å—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ –∑–∞—è–≤–∫–∏ –æ–±—Ä–æ–±–ª–µ–Ω—ñ. –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!")